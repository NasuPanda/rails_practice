# .rubocop_todo.yml が空になったら、この行は削除する。
# inherit_from: .rubocop_todo.yml

require:
  - rubocop-rails
  - rubocop-rspec

# 対象外
AllCops:
  Exclude:
    - "vendor/**/*"
    - "bin/**"
    - "db/schema.rb"
    - "node_modules/**/*"
    - "tmp/**/*"
    - "lib/**/*"
  DisplayCopNames: true
  TargetRubyVersion: 2.6

# trueかfalseを設定しないと警告が出る
Style/HashEachMethods:
  Enabled: true
Style/HashTransformKeys:
  Enabled: true
Style/HashTransformValues:
  Enabled: true

##################### Style ##################################

# 日本語のコメントを許可する
Style/AsciiComments:
  Enabled: false

# ドキュメントの無いpublic classを許可する
Style/Documentation:
  Enabled: false

# !! のイディオムを許可
Style/DoubleNegation:
  Enabled: false

# selfが無くても良い時に省略するか。model内において、ローカル変数とメソッド呼び出しの区別をつけた方が分かりやすい場合が多い
Style/RedundantSelf:
  Enabled: false

# 明示的に else で nil を返すのは分かりやすいので許可する
Style/EmptyElse:
  EnforcedStyle: empty

# https://www.task-notes.com/entry/20160831/1472572735
Style/FrozenStringLiteralComment:
  Enabled: false

##################### Lint ##################################

# * 同名のメソッドがある場合にローカル変数に `_` を付ける
# * 一時変数として `_` を付ける
# というテクニックは頻出する
Lint/UnderscorePrefixedVariableName:
  Enabled: false

##################### Layout ###################################

# メソッドチェーンの改行は末尾に . を入れる
# REPL に貼り付けた際の暴発を防ぐため
Layout/DotPosition:
  EnforcedStyle: trailing

# private/protected は一段深くインデントする
Layout/IndentationConsistency:
  EnforcedStyle: indented_internal_methods

# 1行の文字数
Layout/LineLength:
  Max: 160
  Exclude:
    - "db/migrate/*.rb"

##################### Metrics ##################################

# 変数の代入(A)、メソッドの呼び出し等(B)、条件分岐(C)から算出される複雑度
Metrics/AbcSize:
  Max: 30

# 循環的複雑度 ≒ 分岐の数
Metrics/CyclomaticComplexity:
  Max: 10

# メソッドの行数
Metrics/MethodLength:
  Max: 20
  Exclude:
    - "db/migrate/*.rb"